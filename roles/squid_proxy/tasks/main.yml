---
- name: Install ufw and fail2ban
  apt:
    name: 
      - ufw
      - fail2ban
    update_cache: true

# ufw and certificate creation
- name: Enable ufw (deny all)
  ufw:
    state: enabled
    policy: deny

- name: Allow necessary ports
  ufw:
    rule: allow
    port: "{{ item  }}"
    proto: tcp
  loop:
    - 22
    - 80
    - "{{ proxy_port }}"

- name: Get certificate from Let's Encrypt
  tags: certbot
  vars:
    certbot_create_if_missing: True
    certbot_create_method: standalone
    certbot_admin_email: "{{ lets_encrypt_email }}"
    certbot_auto_renew_hour: "4"
    certbot_auto_renew_user: "root"
    certbot_create_standalone_stop_services: False
    certbot_certs:
      - domains: ["{{ inventory_hostname }}"]
  import_role:
    name: geerlingguy.certbot

- name: Close port 80 after certificate is created
  ufw:
    rule: deny
    port: 80
    proto: tcp

- name: Create pre hook to open the port before certificate renewal
  copy:
    dest: /etc/letsencrypt/renewal-hooks/pre/open_port
    mode: 0700
    content: |
      #!/bin/bash
      ufw allow 80/tcp

- name: Create post hook to close the port after certificate renewal
  copy:
    dest: /etc/letsencrypt/renewal-hooks/post/close_port
    mode: 0700
    content: |
      #!/bin/bash
      ufw deny 80/tcp
      service squid reload

# Squid
- name: Install squid
  apt:
    name: squid-openssl
    update_cache: true
  notify: Reload squid

- name: Set configuration
  template:
    src: "templates/squid.conf.j2"
    dest: "/etc/squid/squid.conf"
  notify: Reload squid

- name: Install passlib (required for htpasswd module)
  pip: 
    name: passlib

# Update proxy users
- name: Set/remove allowed users for proxy
  vars:
    allowed: "{{ item.name in allowed_users }}"
  htpasswd:
    path: /etc/squid/htpasswd
    name: "{{ item.name }}"
    password: "{{ proxy_passwords[item.name] if allowed else omit }}"
    state: "{{ 'present' if allowed else 'absent'}}"
  when: item.name is defined
  with_items:
    - "{{ all_users }}"

# configure fail2ban for squid
- name: Enable fail2ban
  service:
    name: fail2ban
    enabled: true
    state: started

- name: Copy custom squid filter for fail2ban
  copy:
    src: custom_squid.conf
    dest: /etc/fail2ban/filter.d/custom_squid.conf
    owner: root
    group: root
    mode: 0644
  notify: Reload fail2ban

- name: Copy squid-jail for fail2ban
  template:
    src: custom_squid.local.j2
    dest: /etc/fail2ban/jail.d/custom_squid.local
    owner: root
    group: root
    mode: 0644
  notify: Reload fail2ban