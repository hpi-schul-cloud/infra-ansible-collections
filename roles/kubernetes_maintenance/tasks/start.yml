---
- name: Add bitnami chart repo
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: "https://charts.bitnami.com/bitnami"
  check_mode: false

- name: Install maintenance Nginx Helm chart
  kubernetes.core.helm:
    name: "{{ maintenance_page_release_name }}"
    chart_ref: bitnami/nginx
    update_repo_cache: true
    wait: true
    chart_version: "{{ maintenance_page_nginx_chart_version }}"
    kubeconfig: "{{ kubeconfig }}"
    release_namespace: "{{ maintenance_namespace }}"
    values:
      serverBlock: |-
        server {
        listen       8080;
        error_page   503 /maintenance.html;
        location /maintenance.html {
            root /opt/bitnami/nginx/html/;
          }
        location / {
            return 503;
          }
        }
      extraDeploy:
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ maintenance_page_release_name }}-nginx-html"
          data:
            maintenance.html: "{{ lookup('template', './maintenance.html.j2') }}"
      extraVolumes:
        - name: maintenance-html
          configMap:
            name: "{{ maintenance_page_release_name }}-nginx-html"
      extraVolumeMounts:
        - name: maintenance-html
          mountPath: /opt/bitnami/nginx/html/maintenance.html
          subPath: maintenance.html

- name: Get Ingress
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    proxy: "{{ proxy_url | default(omit, true) }}"
    proxy_headers: "{{ proxy_headers | default(omit, true) }}"
    kind: Ingress
    name: "{{ maintenance_target_ingress }}"
    namespace: "{{ maintenance_namespace }}"
  register: maintenance_target_ingress_state

- name: Update Ingress
  kubernetes.core.k8s:
    state: patched
    kubeconfig: "{{ kubeconfig }}"
    proxy: "{{ proxy_url | default(omit, true) }}"
    proxy_headers: "{{ proxy_headers | default(omit, true) }}"
    kind: Ingress
    name: "{{ maintenance_target_ingress }}"
    namespace: "{{ maintenance_namespace }}"
    definition:
      spec:
        ingressClassName: "{{ maintenance_page_disable_ingress_class }}"

- name: Create maintenance Ingress
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    proxy: "{{ proxy_url | default(omit, true) }}"
    proxy_headers: "{{ proxy_headers | default(omit, true) }}"
    kind: Ingress
    name: "{{ maintenance_target_ingress }}-maintenance"
    namespace: "{{ maintenance_namespace }}"
    definition:
      spec: "{{ lookup('template', './ingress-rules.yml.j2') | from_yaml }}"
