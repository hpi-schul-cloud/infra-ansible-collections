---
- name: Clear local facts
  set_fact:
    bbb_servers: []
    bbb_turn_servers: []
# We generate the list of BBB and TURN servers according to our naming convention.
# To do this we use set_fact to build the list by successively adding servers to it.
- name: Generate BBB servers list
  vars:
    bbb_server: "{{ 'bbb-' + (n + bbb_server_start_index | int) | string + '.' + bbb_domain_name }}"
  set_fact:
    bbb_servers: "{{ bbb_servers + [bbb_server] }}"
  loop: "{{ range(bbb_server_count) }}"
  loop_control:
    loop_var: n
- name: Generate TURN servers list
  vars:
    turn_server: "{{ 'turn-' + '%02d' | format(n + 1 | int) + '.' + bbb_domain_name }}"
  set_fact:
    bbb_turn_servers: "{{ bbb_turn_servers + [turn_server] }}"
  loop: "{{ range(bbb_turn_server_count) }}"
  loop_control:
    loop_var: n
# Prometheus Operator can only get additional scrape configs, volumes and volume mounts
# from one secret or one Helm value each so we have to add entries to the
# prometheus_additionalScrapeConfigs, prometheus_volumeMounts and prometheus_volumeMounts variable
- name: Add BBB scrape configs and liveness probes
  set_fact:
    prometheus_additionalScrapeConfigs: "{{ prometheus_additionalScrapeConfigs + bbb_prometheus_scrape_config }}"
    prometheus_volumes: "{{ prometheus_volumes + [bbb_prometheus_volume] }}"
    prometheus_volumeMounts: "{{ prometheus_volumeMounts + [bbb_prometheus_volume_mount] }}"

- name: Create BBB basic auth credentials secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    proxy: "{{ proxy_url | default(omit, true) }}"
    proxy_headers: "{{ proxy_headers | default(omit, true) }}"
    definition:
      apiVersion: onepassword.com/v1
      kind: OnePasswordItem
      metadata:
        name: "{{ bbb_node_exporter_basic_auth_secret_name }}"
        namespace: monitoring
      spec:
        itemPath: "vaults/{{ bbb_vault }}/items/{{ bbb_node_exporter_basic_auth_secret_name }}"
