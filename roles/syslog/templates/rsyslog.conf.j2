# rsyslog configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

#
# There is a new advanced configuration format for the rsyslog configuration
# with better readablity. Newer settings may be supported using the advanced
# configuration only.
# If a line in the config file starts with "$..." it is in the old format.
# How to convert the settings to this format is decribed here:
# https://www.rsyslog.com/doc/v8-stable/configuration/converting_to_new_format.html#
#

$umask 0000                 ### Add this to reset the umask#
$FileCreateMode 0644        ### This line can be omitted as the compiled in default is already set to 644. Modify this value if you need to set permissions other than 644#
$umask 0033
#$DebugLevel 1

#### MODULES ####

global(
#    defaultNetstreamDriverCAFile="/etc/ssl/certs/syslog-ca-cert.pem"
#    defaultNetstreamDriverCertFile="/etc/ssl/certs/syslog-server-cert.pem"
#    defaultNetstreamDriverKeyFile="/etc/ssl/certs/syslog-server-key.pem" 
)

#
# provides support for local system logging (e.g. via logger command)
# https://www.rsyslog.com/doc/v8-stable/configuration/modules/imuxsock.html
#
# Tried to use the new RainerScript notation, but that leads to the following problem in /var/log/messages:
# command 'SystemLogSocketName' is currently not permitted - did you already set it via a RainerScript command (v6+ config)? [v8.24.0-57.el7_9 try http://www.rsyslog.com/e/2222 ]
# Bug: https://github.com/rsyslog/rsyslog/issues/2150
# Back to the old notation.
#
#module(
#    load="imuxsock"
#    SysSock.Use="on"
#)
$ModLoad imuxsock
$OmitLocalLogging on

# provides access to the systemd journal
#  https://www.rsyslog.com/doc/v8-stable/configuration/modules/imjournal.html
module(
    load="imjournal"
    StateFile="imjournal.state"
)

# reads kernel messages (the same are read from journald)
# module(load="imklog")

# provides --MARK-- message capability
# module(load="immark")

#
# Provides TCP syslog reception without TLS (p=plain)
# https://www.rsyslog.com/doc/v8-stable/configuration/modules/imptcp.html
#
module(
    load="imptcp"
)
input(
    type="imptcp"
    port="51422"
)

#
# Provides TCP syslog reception with TLS
# https://www.rsyslog.com/doc/v8-stable/configuration/modules/imtcp.html
#
module(
    load="imtcp"
    streamdriver.name="gtls"
     # require TLS for the connection
    streamdriver.mode="1"
    # streamdriver.authmode="x509/name" # server is NOT authenticated
    streamdriver.authmode="anon" # server is NOT authenticated
    MaxSessions="2048"
)
input(
    type="imtcp"
    port="51422"
    
)

#### GLOBAL DIRECTIVES ####

#
# $AllowedSender - specifies which remote systems are allowed to send syslog messages to rsyslogd
# https://www.rsyslog.com/doc/master/configuration/input_directives/index.html
# 10.0.0.0/24 infra-dev-syslog-lan
# 10.13.20.0/24 frontend lan sc-prod-legacy
# 10.9.12.0/24 frontend lan sc-staging-legacy
#
$AllowedSender UDP, 127.0.0.1, [::1]/128, {{ syslog_allowed_senders }}
$AllowedSender TCP, 127.0.0.1, [::1]/128, {{ syslog_allowed_senders }}

# Where to place auxiliary files
$WorkDirectory /var/lib/rsyslog

# Use default timestamp format
# module builtin:omfile
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

#### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
if prifilt("authpriv.*") then {
    action(type="omfile" file="/var/log/secure")
}

# Log all the mail messages in one place.
#mail.*                                                  -/var/log/maillog
if prifilt("mail.*") then {
    action(type="omfile" file="/var/log/maillog")
}

# Log cron stuff
if prifilt("cron.*") then {
    action(type="omfile" file="/var/log/cron")
}

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log

# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# ### end of the forwarding rule ###
