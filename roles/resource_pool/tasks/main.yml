---
###################### Terraform setup ##########################################################
# Executes terraform apply on normal ansible-playbook run. When the option --check is given,
# terraform plan is executed. For all terraform tasks the variable resource_pool must be defined.
# See https://docs.ansible.com/ansible/latest/collections/community/general/terraform_module.html
- name: Execute terraform apply
  environment:
    IONOS_USERNAME: "{{ ionos_username | default('') }}"
    IONOS_PASSWORD: "{{ ionos_password | default('') }}"
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
  community.general.terraform:
    project_path: '{{ playbook_dir }}/../terraform/resource-pools/{{ resource_pool }}'
    state: "{{ 'planned' if terraform_plan else 'present' }}"
    plan_file: "{{ '/tmp/tf-plan' if terraform_plan else omit }}"
    workspace: "{{ terraform_workspace }}"
    force_init: true
    provider_upgrade: true
    # Variable is unset by default to still work with community.general < 5.7.0
    complex_vars: "{{ terraform_complex_vars | default(omit) }}"
    # A group of key-values to override template variables or those in variables files.
    # They have to be put in EVERY single resource pool
    variables: "{{ terraform_variables }}"
  register: terraform_run

- name: Terraform executed command
  debug:
    msg: "Apply command: {{ terraform_run.command }}"
  when: terraform_run.command is defined

- name: Terraform run output
  debug:
    msg: "{{ terraform_run.stdout }}"
  when: terraform_run is defined

- name: Terraform run output variables
  debug:
    var: terraform_run.outputs
  when: terraform_run is defined and terraform_run.outputs is defined
