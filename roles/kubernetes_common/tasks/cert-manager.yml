# The basic cert-manager. This provides the functionality
# to manage certificates.
#
# Sources and release info:
# https://github.com/jetstack/cert-manager/tags
# https://github.com/jetstack/cert-manager/releases/tag/v1.0.4

# Helm Chart:
# Sources: https://github.com/jetstack/cert-manager/tree/master/deploy/charts/cert-manager
# Helm-Repo: https://artifacthub.io/packages/helm/jetstack/cert-manager
# The Repo works, but: https://github.com/cert-manager/website/issues/478
#
# Installation:
# https://cert-manager.io/docs/installation/kubernetes/
#
# Custom Resource Definitions:
# For older versions we have maintained the matching crds in charts/sc-cert-manager-addons/crds/cert-manager.crds.yaml.
# When updating to a new Cert-Manager version, the charts/sc-cert-manager-addons/crds/cert-manager.crds.yaml file potentially must be updated.
# Newer versions >= 1.1.0 support an installCRDs switch.
# https://github.com/jetstack/cert-manager/blob/release-1.1/deploy/charts/cert-manager/templates/BUILD.bazel
#
# The Cert-Manager itself can live without an ingress to provide self-signed certificates.
# For Let's encrypt certificates an Ingress will be needed to validate the site ownership.
- name: Add Jetstack.io Helm repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
  check_mode: false
  changed_when: false
- name: Install cert-manger Helm chart
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_chart_version }}"
    kubeconfig: "{{ kubeconfig }}"
    release_namespace: cert-manager
    create_namespace: true
    values:
      "{{ cert_manager_chart_values }}"

# ClusterIssuer setup. See https://artifacthub.io/packages/helm/jetstack/cert-manager
# "In order to begin issuing certificates, you will need to set up a ClusterIssuer or
# Issuer resource (for example, by creating a 'letsencrypt-staging' issuer)."
# https://cert-manager.io/docs/concepts/issuer/
- name: Install clusterissuer Helm chart
  kubernetes.core.helm:
    name: sc-cert-manager-clusterissuer
    chart_ref: "{{ playbook_dir }}/../charts/sc-cert-manager-clusterissuer"
    kubeconfig: "{{ kubeconfig }}"
    release_namespace: cert-manager
  when: sc_cert_manager_clusterissuer_enabled is true
