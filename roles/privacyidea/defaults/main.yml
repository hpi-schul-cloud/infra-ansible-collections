---
privacyidea_version: "3.8.1"
privacyidea_packages:
    - python3-venv
    - python3-pip
    - nginx
    - python3-mysqldb
    - uwsgi
    - uwsgi-plugin-python3
    - certbot
    - python3-certbot-nginx
    - mariadb-server
    - mariadb-client
privacyidea_dir: "/opt/privacyidea"
privacyidea_server_name: ""
privacyidea_mariadb_name: "privacyidea"
# admin credentials
privacyidea_admin_password: ""
privacyidea_admin: "admin"
# token-admin credentials
privacyidea_token_admin_password: ""
privacyidea_token_admin: "token-admin"
# seed-import credentials
privacyidea_seed_import_password: ""
privacyidea_seed_import: "seed-import"
# Mariadb user credentials:
privacyidea_db_user_password: ""
mariadb_user: "privacyidea_db"
# The default root user installed by mysql - almost always root
mysql_root_home: /root
privacyidea_mariadb_username: "root"
privacyidea_mariadb_password: ""
privacyidea_pi_pepper: ''
privacyidea_secret_key: ''





# We will not create new realms as these will be imported from the dump file.
# The existing realms will be utilized during the data migration process.
# The following realms will be available after the import:
#admin_realm: "admin"
#ucs_users_realm: "ucs_users"
#service_realm: "service"

#Based on the information retrieved from the Admin2go_dump file
#sql_resolver_ucs_domain_admins :Likely used for admin users, specifically those in the Domain Admins group
#sql_resolver_ucs_users: Likely used for general users
#sql_resolver_service: This resolver is likely used to map users stored in the users_service table (sql in dump)
# We will not create resolvers with an Ansible task; instead, we will create them manually in privacyidea_data_import_and_cleanup since the resolvers will be overwritten after importing the dump file
#sql_resolver_service: "service"
#sql_resolver_ucs_users: "ucs_users"
#sql_resolver_ucs_domain_admins: "ucs_domain_admins"