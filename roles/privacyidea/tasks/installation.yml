---
# Ensures all necessary packages are installed
- name: Install packages
  apt:
    name: "{{ privacyidea_packages }}"
    state: present

#https://privacyidea.readthedocs.io/en/latest/installation/pip.html
- name: Create privacyIDEA directories
  file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  loop:
    - /etc/privacyidea # stores the configuration files(enckey,pi.cfg,privacyideaapp.py,private.pem,public.pem)
    - /opt/privacyidea # contains the virtualenv
    - /var/log/privacyidea # contains privacyidea.log
    - /run/uwsgi/app/privacyidea # contains the Unix socket file for uWSGI(privacyidea.socket)
    - /var/log/uwsgi
    
#Install virtualenv using pip
- name: Install virtualenv
  pip:
    name: virtualenv
  become: true

- name: Create a virtualenv for privacyIDEA
  command: python3 -m venv "{{ privacyidea_dir }}/virtualenv"
  args:
    creates: "{{ privacyidea_dir }}/virtualenv"
  become: true

- name: Install privacyidea dependencies
  pip:
    virtualenv: "{{ privacyidea_dir }}/virtualenv"
    requirements: "https://raw.githubusercontent.com/privacyidea/privacyidea/v{{ privacyidea_version }}/requirements.txt"

- name: Install privacyIDEA {{ privacyidea_version }}
  pip:
    virtualenv: "{{ privacyidea_dir }}/virtualenv"
    name: "privacyIDEA=={{ privacyidea_version }}"


- name: Create MariaDB database
  mysql_db:
    name: "{{ privacyidea_mariadb_name }}"
    state: present
    login_user: "{{ privacyidea_mariadb_username }}"
    login_password: "{{ privacyidea_mariadb_password }}"
    login_host: "{{ privacyidea_mariadb_private_ip }}"
  become: true


- name: Create database user and grant privileges
  mysql_user:
    name: "{{ mariadb_user }}"
    password: "{{ privacyidea_db_user_password }}"
    priv: "*.*:{{ db_privileges_global | join(',') }},{{ privacyidea_mariadb_name }}.*:{{ db_privileges_specific | join(',') }}"
    host: "%"  
    state: present
    login_user: "{{ privacyidea_mariadb_username }}"
    login_password: "{{ privacyidea_mariadb_password }}"
    login_host: "{{ privacyidea_mariadb_private_ip }}"
  become: true


#Copies the uWSGI configuration file for privacyIDEA
- name: Copy uWSGI configuration
  template:
    src: privacyidea.ini.j2
    dest: /etc/uwsgi/apps-available/privacyidea.ini
  notify: restart uWSGI

# Sets up the uWSGI service for privacyIDEA
- name: Copy uWSGI service file
  template:
    src: uwsgi.service.j2
    dest: /etc/systemd/system/uwsgi.service
  notify: restart uWSGI

# Sets up the database configuration for privacyIDEA
- name: Configure database connection
  template:
    src: pi.cfg.j2
    dest: /etc/privacyidea/pi.cfg


- name: Copy PrivacyIDEA WSGI script
  template:
    src: privacyideaapp.py.j2
    dest: /etc/privacyidea/privacyideaapp.py

#https://privacyidea.readthedocs.io/en/latest/installation/pip.html
- name: Create database tables
  command: "{{ privacyidea_dir }}/virtualenv/bin/pi-manage create_tables"

- name: Stamping the database to the current database schema
  command: "{{ privacyidea_dir }}/virtualenv/bin/pi-manage db stamp head -d {{ privacyidea_dir }}/virtualenv/lib/privacyidea/migrations/"

# create an admin user for privacyIDEA
- name: Create privacyIDEA admin user
  command: "{{ privacyidea_dir }}/virtualenv/bin/pi-manage admin add {{ privacyidea_admin }} -p {{ privacyidea_admin_password}}"
  become: true
  no_log: true
